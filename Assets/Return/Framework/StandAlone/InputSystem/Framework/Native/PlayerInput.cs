//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Return/Framework/Unknown/Plugin/InputSystem/Framework/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @mPlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @mPlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Cameras"",
            ""id"": ""4e19df0a-b25c-4c74-a78b-706dd7816272"",
            ""actions"": [
                {
                    ""name"": ""FirstPersonCamera"",
                    ""type"": ""Button"",
                    ""id"": ""7ddfb09c-04bd-4aaf-afe3-d7ac06a9fd7b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThirdPersonCamera"",
                    ""type"": ""Button"",
                    ""id"": ""70ed4a2c-cc07-4921-ac7f-559f0d6abc11"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9c39ed29-cffc-400c-8769-bf16a0999e33"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirstPersonCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""019bd525-859c-4aeb-85d3-74731097cf4d"",
                    ""path"": ""<Keyboard>/f2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThirdPersonCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""FreeCam"",
            ""id"": ""f4463ea7-fbf4-4f90-aae6-7444c565f5ec"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""fdf954be-016b-4a8c-80d6-ccf1616839a0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ViewPort"",
                    ""type"": ""PassThrough"",
                    ""id"": ""658bae6f-b0c5-4bce-8662-c749a00dfaea"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Test"",
                    ""type"": ""Button"",
                    ""id"": ""866b65ad-1f52-41c4-88ed-7ba9ca61f9b7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Room"",
                    ""type"": ""PassThrough"",
                    ""id"": ""bbc5c4f4-38b7-4260-8adf-0d5341ca7aea"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpeedUp"",
                    ""type"": ""Button"",
                    ""id"": ""78db4777-45d4-4f8b-9389-b78b7d9818b8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""19cb704e-00f2-47dc-838c-964f4829084b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""80bd40eb-fbf4-469c-9231-af61543f60af"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""804a1649-f74b-4c0b-9f2a-8f1a109e4df7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""37b804c2-14c5-40db-88f2-6103d4797df2"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ef9ceb40-9435-4a1e-ab66-bbb45515a9bf"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f7961fba-80a7-46ea-b669-26bbbf0cc132"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""ViewPort"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""102f930f-ceb9-48ae-a3b5-828fbdbe7a29"",
                    ""path"": ""<VirtualMouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Test"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa26ee84-da89-45ae-bac6-18fec90c5138"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Room"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de5acb6d-9dde-4635-8110-fd1558dbb9f5"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpeedUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Humanoid"",
            ""id"": ""9d5df5e2-80be-47ea-bc0a-b71288259ca2"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f17d6099-8888-4997-8b23-2ae8ab33344d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseRotate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""fa60394a-cab7-486f-8fef-04397d8c0897"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rush"",
                    ""type"": ""Button"",
                    ""id"": ""140d9ba0-5467-4453-9bab-ab59ad89b9ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""66e91e5c-dbd0-40c5-8495-0c07850dfd31"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MainInteract"",
                    ""type"": ""Button"",
                    ""id"": ""cd7ad58e-ccc9-403e-9d32-34d67d1f0d81"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dequip"",
                    ""type"": ""Button"",
                    ""id"": ""11d6be97-8ef6-409f-8aa7-a657085b387a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Discard"",
                    ""type"": ""Button"",
                    ""id"": ""fba6d57e-960d-401f-b38b-ab4ea42f24ea"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Room"",
                    ""type"": ""PassThrough"",
                    ""id"": ""5ace3d0e-471a-46c8-96dd-c758e621ac99"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Squat"",
                    ""type"": ""Button"",
                    ""id"": ""634b4343-8179-48de-908e-4233b803989a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""0f8e1e09-de82-4f7e-94f6-b4cc61f236cc"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""48bded39-4f4c-4a71-be5c-6b5fe66aa6a6"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""45123136-e21e-4631-aa1a-4f79b72c1390"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0544efa3-a1f2-4939-84af-617abbb86ab5"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4054b4eb-8386-4a72-b660-32b02d56bd32"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""14e7696c-e953-4289-a255-f5f045bbe1fd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5082edae-5de0-4577-a3bf-025933118383"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4f2fe218-f3db-4218-aea0-b730d5f729aa"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a58bab1a-4da7-4e39-b100-dd4b0a46b3a6"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8ddd7f75-23ca-468d-8f02-1278f77aae93"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""288be9ec-4be5-4ef8-a816-47eb213ca5d1"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""MouseRotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""41a532d8-7d98-44c4-b925-e21703121c44"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Rush"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf85755e-001c-4d6e-a5e8-0b9a8dd66a1d"",
                    ""path"": ""<Keyboard>/numpad0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Rush"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea592afc-5bbb-4edd-885c-3826cba091a6"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aee16480-3440-4cca-972a-1fa0fe218081"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""MainInteract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9bde7f91-c0e6-43eb-acd5-c96182616b56"",
                    ""path"": ""<Keyboard>/backquote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Dequip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b9347c4-85a9-41b4-83fd-e8d6a850042e"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Discard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b225c56c-90fa-4538-8957-5bba192bb456"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Room"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1da03a6d-f8fb-48e4-a295-84bd6e491e98"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Squat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Battle"",
            ""id"": ""8ed2c6ec-7c29-4825-9f11-cca588b1d2f7"",
            ""actions"": [
                {
                    ""name"": ""MainUse"",
                    ""type"": ""Button"",
                    ""id"": ""44b1b4d0-3b6a-4e8f-bf45-a0918ffcaab5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Assist"",
                    ""type"": ""Button"",
                    ""id"": ""cfe041a7-e7d3-4766-a005-f72e9d982909"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""a0be95d5-7198-437f-bc39-c10902d8aa0e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch"",
                    ""type"": ""Button"",
                    ""id"": ""ea999dda-3ad7-4036-9956-78a0aeb0ceac"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchMode"",
                    ""type"": ""Button"",
                    ""id"": ""55c59e46-4960-473c-8155-b47b5a33a0d1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChargingBolt"",
                    ""type"": ""Button"",
                    ""id"": ""9d41f303-c133-44da-aa07-8c1a7778eab5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Room"",
                    ""type"": ""Button"",
                    ""id"": ""d56e743b-6b14-4133-854c-798878ca398f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchAssist"",
                    ""type"": ""Button"",
                    ""id"": ""1448e6cc-0f49-4c96-b66f-fa690efc7390"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""464d6620-a7ea-4193-b21b-37a7a022fbdb"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""MainUse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""335fcce8-a40e-4809-9599-de7b36dc1c7d"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Assist"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9221a0dc-7e6d-4799-8ed1-8c711aa594db"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ca718cc-5141-4eb1-b949-cdddb0290c9e"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Switch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""33894818-3696-4ac6-94cf-2de9cd9810c0"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""SwitchMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f74d40e8-cb91-437e-bfc1-09b335659ed8"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChargingBolt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67764857-ad96-4eec-a4c7-dfb4c9eafcba"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Room"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8642eb98-d645-4486-b31e-6f0d46acec05"",
                    ""path"": ""<Mouse>/backButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchAssist"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Vehicle"",
            ""id"": ""912fc7ba-ea9e-4d20-acea-e03d29f840a1"",
            ""actions"": [
                {
                    ""name"": ""Brake"",
                    ""type"": ""Button"",
                    ""id"": ""3ee27b78-81c1-49b1-afc2-1805ba340efc"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rush"",
                    ""type"": ""Button"",
                    ""id"": ""2471b9cf-aefb-4a08-9e9f-a28a55393fd0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseEngine"",
                    ""type"": ""Button"",
                    ""id"": ""2771d112-5212-43ff-b0b5-c7f00d109bfe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Steer"",
                    ""type"": ""PassThrough"",
                    ""id"": ""dcfe914c-cd3e-4b03-ad9a-9fe2d417be59"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Torque"",
                    ""type"": ""PassThrough"",
                    ""id"": ""fa97cebd-4791-42fe-97da-a0cf0b03d180"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d0501d18-ae0b-415e-ad4c-54c6be928e09"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1593ee4f-c3dd-4027-9112-1d3b3bc1202d"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Rush"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3cbe65e2-4c4a-442c-ac2b-d9970aec9220"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""MultiTap"",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""UseEngine"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""290e7997-6fc1-4f3b-ac89-822e9398d06e"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Steer"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""4b9b34f0-d430-48e5-8da3-16a19c504908"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""048fe312-dbca-40df-908f-75560c1a2945"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""5897c441-1686-4e54-8038-35f775aff2a3"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Torque"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""ef9dd44d-3de5-4d29-ad55-9cc7373eb3b7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Torque"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""f2b94ca5-2fa1-40ea-85bc-bb6fde2e859d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Torque"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""GUI"",
            ""id"": ""0f06db76-ce90-4b3f-813a-ccefea80eda6"",
            ""actions"": [
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""97b5d758-0bad-436f-9964-bb2613fb64b7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Exit"",
                    ""type"": ""Button"",
                    ""id"": ""92d11c31-631c-4f4d-bf95-7db2104b580a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MainAssist"",
                    ""type"": ""Button"",
                    ""id"": ""7190f65d-820c-43c7-b7e9-48ea513ecf44"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondAssist"",
                    ""type"": ""Button"",
                    ""id"": ""ceb77258-9bca-48cc-a598-abbbde773660"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Contect"",
                    ""type"": ""Button"",
                    ""id"": ""f542bf54-171e-4bd9-9bdb-9a76b2bc98af"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThirdAssist"",
                    ""type"": ""Button"",
                    ""id"": ""fafd24c6-142b-4f86-8bd5-d7acb9fa86c5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CursorLeft"",
                    ""type"": ""Button"",
                    ""id"": ""f9f368ab-e0f6-4271-9ec5-e8b5a7052a46"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CursorRight"",
                    ""type"": ""Button"",
                    ""id"": ""93c2ea94-1274-4eb0-b235-e0b18f7c0825"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FreeCursor"",
                    ""type"": ""Button"",
                    ""id"": ""8e0a6607-6c0e-4fa2-8409-8f8724fdeedd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""MultiTap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftCursorWithAssit"",
                    ""type"": ""Button"",
                    ""id"": ""896cccf1-b5d6-48b7-b6ed-69464b5a5b70"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f8629e39-391f-4245-8f9f-4f73483761fa"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e3791eb4-ff82-4051-b0e1-4572a313607d"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69928f31-da0d-4079-a16f-95d79fe81fd2"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""MainAssist"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""43e001ae-af74-4592-87b4-364746ea0654"",
                    ""path"": ""<Keyboard>/leftAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""SecondAssist"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8b45ada-6eb8-497b-88f2-34e2f94fe119"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Contect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec78b56b-d9ce-48b5-a2cb-95f38d0c97d5"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""ThirdAssist"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb92c94b-cd7a-4c20-b9d7-c5d3e4758f72"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""CursorLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e4d73125-7eed-4f0c-8da9-206fbc31cd9b"",
                    ""path"": ""<Keyboard>/leftAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""FreeCursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f2c2ec34-b8ea-4499-83bd-6341f6c46e0f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""CursorRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ca57abb-e00d-40c7-b7a3-7eac6e985dcd"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftCursorWithAssit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e1f68ba-bee5-482c-b38c-89b4c6c3dd73"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftCursorWithAssit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Debug"",
            ""id"": ""f10e8c0e-e884-4a03-8081-9ce52f9d16ad"",
            ""actions"": [
                {
                    ""name"": ""Debug"",
                    ""type"": ""Button"",
                    ""id"": ""f7f96569-5ba2-48a2-8eb6-26dd5cd618f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reset"",
                    ""type"": ""Button"",
                    ""id"": ""9cc11857-f626-4109-9bf2-0751c2f33082"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0a3af067-db7e-4ea5-a1b2-704fd23e6683"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Debug"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""47bd9e11-f5ca-43ca-842f-61f0b096b600"",
                    ""path"": ""<Keyboard>/f5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Agent"",
            ""id"": ""c2357ab9-9c73-44ab-867f-880fd1072d6f"",
            ""actions"": [
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""f383e0a1-441c-4bb3-b594-885416788f20"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ConfirmInteract"",
                    ""type"": ""Button"",
                    ""id"": ""073f1a0a-e80c-4fa0-839d-cb82acbe05ae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Release"",
                    ""type"": ""Button"",
                    ""id"": ""fa009d44-2c73-4372-acf2-a654561d6a92"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""73e8a7a1-4163-43fb-9b93-9c57120b9259"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""037e2ec7-836f-4a42-9f5f-22d988a40b5f"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": ""MultiTap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ConfirmInteract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6a769b3-68f8-4b21-bf2c-9d5213a05f56"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Release"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Firearms"",
            ""id"": ""46fbb572-6faf-4e83-9768-40f1f401a20a"",
            ""actions"": [
                {
                    ""name"": ""Trigger"",
                    ""type"": ""Button"",
                    ""id"": ""8fe208e7-7fba-48a6-84de-fa35d095ea21"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""84c4a88b-6032-43ab-8ecd-e865d8427250"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Room"",
                    ""type"": ""Button"",
                    ""id"": ""c683eeb1-79fb-4731-93ed-7e88077aae7a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""b50e3956-5b36-40b7-9899-8b59a373490d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchMode"",
                    ""type"": ""Button"",
                    ""id"": ""ac029ee1-b304-481a-baf9-443072fb7f7b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Anex"",
                    ""type"": ""Button"",
                    ""id"": ""bb7a274a-a58e-4aee-8ca3-e8a16864c7ed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""01878069-8cda-43de-b9a9-534178323ff6"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d219c1c-7aa9-4cef-8601-0ed6a913b759"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8616d67-c93a-4889-8938-51ca9af3cab1"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Room"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88ecdcaf-e719-4f26-b299-0950a27cb26f"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b83c58f9-e97c-4c46-85e1-d38a128eed8f"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e67aa83-8858-40e1-9e50-0fc46ca0dc3d"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Anex"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PC"",
            ""bindingGroup"": ""PC"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<VirtualMouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Cameras
        m_Cameras = asset.FindActionMap("Cameras", throwIfNotFound: true);
        m_Cameras_FirstPersonCamera = m_Cameras.FindAction("FirstPersonCamera", throwIfNotFound: true);
        m_Cameras_ThirdPersonCamera = m_Cameras.FindAction("ThirdPersonCamera", throwIfNotFound: true);
        // FreeCam
        m_FreeCam = asset.FindActionMap("FreeCam", throwIfNotFound: true);
        m_FreeCam_Movement = m_FreeCam.FindAction("Movement", throwIfNotFound: true);
        m_FreeCam_ViewPort = m_FreeCam.FindAction("ViewPort", throwIfNotFound: true);
        m_FreeCam_Test = m_FreeCam.FindAction("Test", throwIfNotFound: true);
        m_FreeCam_Room = m_FreeCam.FindAction("Room", throwIfNotFound: true);
        m_FreeCam_SpeedUp = m_FreeCam.FindAction("SpeedUp", throwIfNotFound: true);
        // Humanoid
        m_Humanoid = asset.FindActionMap("Humanoid", throwIfNotFound: true);
        m_Humanoid_Movement = m_Humanoid.FindAction("Movement", throwIfNotFound: true);
        m_Humanoid_MouseRotate = m_Humanoid.FindAction("MouseRotate", throwIfNotFound: true);
        m_Humanoid_Rush = m_Humanoid.FindAction("Rush", throwIfNotFound: true);
        m_Humanoid_Jump = m_Humanoid.FindAction("Jump", throwIfNotFound: true);
        m_Humanoid_MainInteract = m_Humanoid.FindAction("MainInteract", throwIfNotFound: true);
        m_Humanoid_Dequip = m_Humanoid.FindAction("Dequip", throwIfNotFound: true);
        m_Humanoid_Discard = m_Humanoid.FindAction("Discard", throwIfNotFound: true);
        m_Humanoid_Room = m_Humanoid.FindAction("Room", throwIfNotFound: true);
        m_Humanoid_Squat = m_Humanoid.FindAction("Squat", throwIfNotFound: true);
        // Battle
        m_Battle = asset.FindActionMap("Battle", throwIfNotFound: true);
        m_Battle_MainUse = m_Battle.FindAction("MainUse", throwIfNotFound: true);
        m_Battle_Assist = m_Battle.FindAction("Assist", throwIfNotFound: true);
        m_Battle_Reload = m_Battle.FindAction("Reload", throwIfNotFound: true);
        m_Battle_Switch = m_Battle.FindAction("Switch", throwIfNotFound: true);
        m_Battle_SwitchMode = m_Battle.FindAction("SwitchMode", throwIfNotFound: true);
        m_Battle_ChargingBolt = m_Battle.FindAction("ChargingBolt", throwIfNotFound: true);
        m_Battle_Room = m_Battle.FindAction("Room", throwIfNotFound: true);
        m_Battle_SwitchAssist = m_Battle.FindAction("SwitchAssist", throwIfNotFound: true);
        // Vehicle
        m_Vehicle = asset.FindActionMap("Vehicle", throwIfNotFound: true);
        m_Vehicle_Brake = m_Vehicle.FindAction("Brake", throwIfNotFound: true);
        m_Vehicle_Rush = m_Vehicle.FindAction("Rush", throwIfNotFound: true);
        m_Vehicle_UseEngine = m_Vehicle.FindAction("UseEngine", throwIfNotFound: true);
        m_Vehicle_Steer = m_Vehicle.FindAction("Steer", throwIfNotFound: true);
        m_Vehicle_Torque = m_Vehicle.FindAction("Torque", throwIfNotFound: true);
        // GUI
        m_GUI = asset.FindActionMap("GUI", throwIfNotFound: true);
        m_GUI_Inventory = m_GUI.FindAction("Inventory", throwIfNotFound: true);
        m_GUI_Exit = m_GUI.FindAction("Exit", throwIfNotFound: true);
        m_GUI_MainAssist = m_GUI.FindAction("MainAssist", throwIfNotFound: true);
        m_GUI_SecondAssist = m_GUI.FindAction("SecondAssist", throwIfNotFound: true);
        m_GUI_Contect = m_GUI.FindAction("Contect", throwIfNotFound: true);
        m_GUI_ThirdAssist = m_GUI.FindAction("ThirdAssist", throwIfNotFound: true);
        m_GUI_CursorLeft = m_GUI.FindAction("CursorLeft", throwIfNotFound: true);
        m_GUI_CursorRight = m_GUI.FindAction("CursorRight", throwIfNotFound: true);
        m_GUI_FreeCursor = m_GUI.FindAction("FreeCursor", throwIfNotFound: true);
        m_GUI_LeftCursorWithAssit = m_GUI.FindAction("LeftCursorWithAssit", throwIfNotFound: true);
        // Debug
        m_Debug = asset.FindActionMap("Debug", throwIfNotFound: true);
        m_Debug_Debug = m_Debug.FindAction("Debug", throwIfNotFound: true);
        m_Debug_Reset = m_Debug.FindAction("Reset", throwIfNotFound: true);
        // Agent
        m_Agent = asset.FindActionMap("Agent", throwIfNotFound: true);
        m_Agent_Interact = m_Agent.FindAction("Interact", throwIfNotFound: true);
        m_Agent_ConfirmInteract = m_Agent.FindAction("ConfirmInteract", throwIfNotFound: true);
        m_Agent_Release = m_Agent.FindAction("Release", throwIfNotFound: true);
        // Firearms
        m_Firearms = asset.FindActionMap("Firearms", throwIfNotFound: true);
        m_Firearms_Trigger = m_Firearms.FindAction("Trigger", throwIfNotFound: true);
        m_Firearms_Aim = m_Firearms.FindAction("Aim", throwIfNotFound: true);
        m_Firearms_Room = m_Firearms.FindAction("Room", throwIfNotFound: true);
        m_Firearms_Reload = m_Firearms.FindAction("Reload", throwIfNotFound: true);
        m_Firearms_SwitchMode = m_Firearms.FindAction("SwitchMode", throwIfNotFound: true);
        m_Firearms_Anex = m_Firearms.FindAction("Anex", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Cameras
    private readonly InputActionMap m_Cameras;
    private ICamerasActions m_CamerasActionsCallbackInterface;
    private readonly InputAction m_Cameras_FirstPersonCamera;
    private readonly InputAction m_Cameras_ThirdPersonCamera;
    public struct CamerasActions
    {
        private @mPlayerInput m_Wrapper;
        public CamerasActions(@mPlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @FirstPersonCamera => m_Wrapper.m_Cameras_FirstPersonCamera;
        public InputAction @ThirdPersonCamera => m_Wrapper.m_Cameras_ThirdPersonCamera;
        public InputActionMap Get() { return m_Wrapper.m_Cameras; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CamerasActions set) { return set.Get(); }
        public void SetCallbacks(ICamerasActions instance)
        {
            if (m_Wrapper.m_CamerasActionsCallbackInterface != null)
            {
                @FirstPersonCamera.started -= m_Wrapper.m_CamerasActionsCallbackInterface.OnFirstPersonCamera;
                @FirstPersonCamera.performed -= m_Wrapper.m_CamerasActionsCallbackInterface.OnFirstPersonCamera;
                @FirstPersonCamera.canceled -= m_Wrapper.m_CamerasActionsCallbackInterface.OnFirstPersonCamera;
                @ThirdPersonCamera.started -= m_Wrapper.m_CamerasActionsCallbackInterface.OnThirdPersonCamera;
                @ThirdPersonCamera.performed -= m_Wrapper.m_CamerasActionsCallbackInterface.OnThirdPersonCamera;
                @ThirdPersonCamera.canceled -= m_Wrapper.m_CamerasActionsCallbackInterface.OnThirdPersonCamera;
            }
            m_Wrapper.m_CamerasActionsCallbackInterface = instance;
            if (instance != null)
            {
                @FirstPersonCamera.started += instance.OnFirstPersonCamera;
                @FirstPersonCamera.performed += instance.OnFirstPersonCamera;
                @FirstPersonCamera.canceled += instance.OnFirstPersonCamera;
                @ThirdPersonCamera.started += instance.OnThirdPersonCamera;
                @ThirdPersonCamera.performed += instance.OnThirdPersonCamera;
                @ThirdPersonCamera.canceled += instance.OnThirdPersonCamera;
            }
        }
    }
    public CamerasActions @Cameras => new CamerasActions(this);

    // FreeCam
    private readonly InputActionMap m_FreeCam;
    private IFreeCamActions m_FreeCamActionsCallbackInterface;
    private readonly InputAction m_FreeCam_Movement;
    private readonly InputAction m_FreeCam_ViewPort;
    private readonly InputAction m_FreeCam_Test;
    private readonly InputAction m_FreeCam_Room;
    private readonly InputAction m_FreeCam_SpeedUp;
    public struct FreeCamActions
    {
        private @mPlayerInput m_Wrapper;
        public FreeCamActions(@mPlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_FreeCam_Movement;
        public InputAction @ViewPort => m_Wrapper.m_FreeCam_ViewPort;
        public InputAction @Test => m_Wrapper.m_FreeCam_Test;
        public InputAction @Room => m_Wrapper.m_FreeCam_Room;
        public InputAction @SpeedUp => m_Wrapper.m_FreeCam_SpeedUp;
        public InputActionMap Get() { return m_Wrapper.m_FreeCam; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FreeCamActions set) { return set.Get(); }
        public void SetCallbacks(IFreeCamActions instance)
        {
            if (m_Wrapper.m_FreeCamActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_FreeCamActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_FreeCamActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_FreeCamActionsCallbackInterface.OnMovement;
                @ViewPort.started -= m_Wrapper.m_FreeCamActionsCallbackInterface.OnViewPort;
                @ViewPort.performed -= m_Wrapper.m_FreeCamActionsCallbackInterface.OnViewPort;
                @ViewPort.canceled -= m_Wrapper.m_FreeCamActionsCallbackInterface.OnViewPort;
                @Test.started -= m_Wrapper.m_FreeCamActionsCallbackInterface.OnTest;
                @Test.performed -= m_Wrapper.m_FreeCamActionsCallbackInterface.OnTest;
                @Test.canceled -= m_Wrapper.m_FreeCamActionsCallbackInterface.OnTest;
                @Room.started -= m_Wrapper.m_FreeCamActionsCallbackInterface.OnRoom;
                @Room.performed -= m_Wrapper.m_FreeCamActionsCallbackInterface.OnRoom;
                @Room.canceled -= m_Wrapper.m_FreeCamActionsCallbackInterface.OnRoom;
                @SpeedUp.started -= m_Wrapper.m_FreeCamActionsCallbackInterface.OnSpeedUp;
                @SpeedUp.performed -= m_Wrapper.m_FreeCamActionsCallbackInterface.OnSpeedUp;
                @SpeedUp.canceled -= m_Wrapper.m_FreeCamActionsCallbackInterface.OnSpeedUp;
            }
            m_Wrapper.m_FreeCamActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @ViewPort.started += instance.OnViewPort;
                @ViewPort.performed += instance.OnViewPort;
                @ViewPort.canceled += instance.OnViewPort;
                @Test.started += instance.OnTest;
                @Test.performed += instance.OnTest;
                @Test.canceled += instance.OnTest;
                @Room.started += instance.OnRoom;
                @Room.performed += instance.OnRoom;
                @Room.canceled += instance.OnRoom;
                @SpeedUp.started += instance.OnSpeedUp;
                @SpeedUp.performed += instance.OnSpeedUp;
                @SpeedUp.canceled += instance.OnSpeedUp;
            }
        }
    }
    public FreeCamActions @FreeCam => new FreeCamActions(this);

    // Humanoid
    private readonly InputActionMap m_Humanoid;
    private IHumanoidActions m_HumanoidActionsCallbackInterface;
    private readonly InputAction m_Humanoid_Movement;
    private readonly InputAction m_Humanoid_MouseRotate;
    private readonly InputAction m_Humanoid_Rush;
    private readonly InputAction m_Humanoid_Jump;
    private readonly InputAction m_Humanoid_MainInteract;
    private readonly InputAction m_Humanoid_Dequip;
    private readonly InputAction m_Humanoid_Discard;
    private readonly InputAction m_Humanoid_Room;
    private readonly InputAction m_Humanoid_Squat;
    public struct HumanoidActions
    {
        private @mPlayerInput m_Wrapper;
        public HumanoidActions(@mPlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Humanoid_Movement;
        public InputAction @MouseRotate => m_Wrapper.m_Humanoid_MouseRotate;
        public InputAction @Rush => m_Wrapper.m_Humanoid_Rush;
        public InputAction @Jump => m_Wrapper.m_Humanoid_Jump;
        public InputAction @MainInteract => m_Wrapper.m_Humanoid_MainInteract;
        public InputAction @Dequip => m_Wrapper.m_Humanoid_Dequip;
        public InputAction @Discard => m_Wrapper.m_Humanoid_Discard;
        public InputAction @Room => m_Wrapper.m_Humanoid_Room;
        public InputAction @Squat => m_Wrapper.m_Humanoid_Squat;
        public InputActionMap Get() { return m_Wrapper.m_Humanoid; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(HumanoidActions set) { return set.Get(); }
        public void SetCallbacks(IHumanoidActions instance)
        {
            if (m_Wrapper.m_HumanoidActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnMovement;
                @MouseRotate.started -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnMouseRotate;
                @MouseRotate.performed -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnMouseRotate;
                @MouseRotate.canceled -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnMouseRotate;
                @Rush.started -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnRush;
                @Rush.performed -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnRush;
                @Rush.canceled -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnRush;
                @Jump.started -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnJump;
                @MainInteract.started -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnMainInteract;
                @MainInteract.performed -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnMainInteract;
                @MainInteract.canceled -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnMainInteract;
                @Dequip.started -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnDequip;
                @Dequip.performed -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnDequip;
                @Dequip.canceled -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnDequip;
                @Discard.started -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnDiscard;
                @Discard.performed -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnDiscard;
                @Discard.canceled -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnDiscard;
                @Room.started -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnRoom;
                @Room.performed -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnRoom;
                @Room.canceled -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnRoom;
                @Squat.started -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnSquat;
                @Squat.performed -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnSquat;
                @Squat.canceled -= m_Wrapper.m_HumanoidActionsCallbackInterface.OnSquat;
            }
            m_Wrapper.m_HumanoidActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @MouseRotate.started += instance.OnMouseRotate;
                @MouseRotate.performed += instance.OnMouseRotate;
                @MouseRotate.canceled += instance.OnMouseRotate;
                @Rush.started += instance.OnRush;
                @Rush.performed += instance.OnRush;
                @Rush.canceled += instance.OnRush;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @MainInteract.started += instance.OnMainInteract;
                @MainInteract.performed += instance.OnMainInteract;
                @MainInteract.canceled += instance.OnMainInteract;
                @Dequip.started += instance.OnDequip;
                @Dequip.performed += instance.OnDequip;
                @Dequip.canceled += instance.OnDequip;
                @Discard.started += instance.OnDiscard;
                @Discard.performed += instance.OnDiscard;
                @Discard.canceled += instance.OnDiscard;
                @Room.started += instance.OnRoom;
                @Room.performed += instance.OnRoom;
                @Room.canceled += instance.OnRoom;
                @Squat.started += instance.OnSquat;
                @Squat.performed += instance.OnSquat;
                @Squat.canceled += instance.OnSquat;
            }
        }
    }
    public HumanoidActions @Humanoid => new HumanoidActions(this);

    // Battle
    private readonly InputActionMap m_Battle;
    private IBattleActions m_BattleActionsCallbackInterface;
    private readonly InputAction m_Battle_MainUse;
    private readonly InputAction m_Battle_Assist;
    private readonly InputAction m_Battle_Reload;
    private readonly InputAction m_Battle_Switch;
    private readonly InputAction m_Battle_SwitchMode;
    private readonly InputAction m_Battle_ChargingBolt;
    private readonly InputAction m_Battle_Room;
    private readonly InputAction m_Battle_SwitchAssist;
    public struct BattleActions
    {
        private @mPlayerInput m_Wrapper;
        public BattleActions(@mPlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @MainUse => m_Wrapper.m_Battle_MainUse;
        public InputAction @Assist => m_Wrapper.m_Battle_Assist;
        public InputAction @Reload => m_Wrapper.m_Battle_Reload;
        public InputAction @Switch => m_Wrapper.m_Battle_Switch;
        public InputAction @SwitchMode => m_Wrapper.m_Battle_SwitchMode;
        public InputAction @ChargingBolt => m_Wrapper.m_Battle_ChargingBolt;
        public InputAction @Room => m_Wrapper.m_Battle_Room;
        public InputAction @SwitchAssist => m_Wrapper.m_Battle_SwitchAssist;
        public InputActionMap Get() { return m_Wrapper.m_Battle; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BattleActions set) { return set.Get(); }
        public void SetCallbacks(IBattleActions instance)
        {
            if (m_Wrapper.m_BattleActionsCallbackInterface != null)
            {
                @MainUse.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnMainUse;
                @MainUse.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnMainUse;
                @MainUse.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnMainUse;
                @Assist.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnAssist;
                @Assist.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnAssist;
                @Assist.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnAssist;
                @Reload.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnReload;
                @Switch.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnSwitch;
                @Switch.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnSwitch;
                @Switch.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnSwitch;
                @SwitchMode.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnSwitchMode;
                @SwitchMode.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnSwitchMode;
                @SwitchMode.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnSwitchMode;
                @ChargingBolt.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnChargingBolt;
                @ChargingBolt.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnChargingBolt;
                @ChargingBolt.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnChargingBolt;
                @Room.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnRoom;
                @Room.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnRoom;
                @Room.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnRoom;
                @SwitchAssist.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnSwitchAssist;
                @SwitchAssist.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnSwitchAssist;
                @SwitchAssist.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnSwitchAssist;
            }
            m_Wrapper.m_BattleActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MainUse.started += instance.OnMainUse;
                @MainUse.performed += instance.OnMainUse;
                @MainUse.canceled += instance.OnMainUse;
                @Assist.started += instance.OnAssist;
                @Assist.performed += instance.OnAssist;
                @Assist.canceled += instance.OnAssist;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @Switch.started += instance.OnSwitch;
                @Switch.performed += instance.OnSwitch;
                @Switch.canceled += instance.OnSwitch;
                @SwitchMode.started += instance.OnSwitchMode;
                @SwitchMode.performed += instance.OnSwitchMode;
                @SwitchMode.canceled += instance.OnSwitchMode;
                @ChargingBolt.started += instance.OnChargingBolt;
                @ChargingBolt.performed += instance.OnChargingBolt;
                @ChargingBolt.canceled += instance.OnChargingBolt;
                @Room.started += instance.OnRoom;
                @Room.performed += instance.OnRoom;
                @Room.canceled += instance.OnRoom;
                @SwitchAssist.started += instance.OnSwitchAssist;
                @SwitchAssist.performed += instance.OnSwitchAssist;
                @SwitchAssist.canceled += instance.OnSwitchAssist;
            }
        }
    }
    public BattleActions @Battle => new BattleActions(this);

    // Vehicle
    private readonly InputActionMap m_Vehicle;
    private IVehicleActions m_VehicleActionsCallbackInterface;
    private readonly InputAction m_Vehicle_Brake;
    private readonly InputAction m_Vehicle_Rush;
    private readonly InputAction m_Vehicle_UseEngine;
    private readonly InputAction m_Vehicle_Steer;
    private readonly InputAction m_Vehicle_Torque;
    public struct VehicleActions
    {
        private @mPlayerInput m_Wrapper;
        public VehicleActions(@mPlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Brake => m_Wrapper.m_Vehicle_Brake;
        public InputAction @Rush => m_Wrapper.m_Vehicle_Rush;
        public InputAction @UseEngine => m_Wrapper.m_Vehicle_UseEngine;
        public InputAction @Steer => m_Wrapper.m_Vehicle_Steer;
        public InputAction @Torque => m_Wrapper.m_Vehicle_Torque;
        public InputActionMap Get() { return m_Wrapper.m_Vehicle; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(VehicleActions set) { return set.Get(); }
        public void SetCallbacks(IVehicleActions instance)
        {
            if (m_Wrapper.m_VehicleActionsCallbackInterface != null)
            {
                @Brake.started -= m_Wrapper.m_VehicleActionsCallbackInterface.OnBrake;
                @Brake.performed -= m_Wrapper.m_VehicleActionsCallbackInterface.OnBrake;
                @Brake.canceled -= m_Wrapper.m_VehicleActionsCallbackInterface.OnBrake;
                @Rush.started -= m_Wrapper.m_VehicleActionsCallbackInterface.OnRush;
                @Rush.performed -= m_Wrapper.m_VehicleActionsCallbackInterface.OnRush;
                @Rush.canceled -= m_Wrapper.m_VehicleActionsCallbackInterface.OnRush;
                @UseEngine.started -= m_Wrapper.m_VehicleActionsCallbackInterface.OnUseEngine;
                @UseEngine.performed -= m_Wrapper.m_VehicleActionsCallbackInterface.OnUseEngine;
                @UseEngine.canceled -= m_Wrapper.m_VehicleActionsCallbackInterface.OnUseEngine;
                @Steer.started -= m_Wrapper.m_VehicleActionsCallbackInterface.OnSteer;
                @Steer.performed -= m_Wrapper.m_VehicleActionsCallbackInterface.OnSteer;
                @Steer.canceled -= m_Wrapper.m_VehicleActionsCallbackInterface.OnSteer;
                @Torque.started -= m_Wrapper.m_VehicleActionsCallbackInterface.OnTorque;
                @Torque.performed -= m_Wrapper.m_VehicleActionsCallbackInterface.OnTorque;
                @Torque.canceled -= m_Wrapper.m_VehicleActionsCallbackInterface.OnTorque;
            }
            m_Wrapper.m_VehicleActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Brake.started += instance.OnBrake;
                @Brake.performed += instance.OnBrake;
                @Brake.canceled += instance.OnBrake;
                @Rush.started += instance.OnRush;
                @Rush.performed += instance.OnRush;
                @Rush.canceled += instance.OnRush;
                @UseEngine.started += instance.OnUseEngine;
                @UseEngine.performed += instance.OnUseEngine;
                @UseEngine.canceled += instance.OnUseEngine;
                @Steer.started += instance.OnSteer;
                @Steer.performed += instance.OnSteer;
                @Steer.canceled += instance.OnSteer;
                @Torque.started += instance.OnTorque;
                @Torque.performed += instance.OnTorque;
                @Torque.canceled += instance.OnTorque;
            }
        }
    }
    public VehicleActions @Vehicle => new VehicleActions(this);

    // GUI
    private readonly InputActionMap m_GUI;
    private IGUIActions m_GUIActionsCallbackInterface;
    private readonly InputAction m_GUI_Inventory;
    private readonly InputAction m_GUI_Exit;
    private readonly InputAction m_GUI_MainAssist;
    private readonly InputAction m_GUI_SecondAssist;
    private readonly InputAction m_GUI_Contect;
    private readonly InputAction m_GUI_ThirdAssist;
    private readonly InputAction m_GUI_CursorLeft;
    private readonly InputAction m_GUI_CursorRight;
    private readonly InputAction m_GUI_FreeCursor;
    private readonly InputAction m_GUI_LeftCursorWithAssit;
    public struct GUIActions
    {
        private @mPlayerInput m_Wrapper;
        public GUIActions(@mPlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Inventory => m_Wrapper.m_GUI_Inventory;
        public InputAction @Exit => m_Wrapper.m_GUI_Exit;
        public InputAction @MainAssist => m_Wrapper.m_GUI_MainAssist;
        public InputAction @SecondAssist => m_Wrapper.m_GUI_SecondAssist;
        public InputAction @Contect => m_Wrapper.m_GUI_Contect;
        public InputAction @ThirdAssist => m_Wrapper.m_GUI_ThirdAssist;
        public InputAction @CursorLeft => m_Wrapper.m_GUI_CursorLeft;
        public InputAction @CursorRight => m_Wrapper.m_GUI_CursorRight;
        public InputAction @FreeCursor => m_Wrapper.m_GUI_FreeCursor;
        public InputAction @LeftCursorWithAssit => m_Wrapper.m_GUI_LeftCursorWithAssit;
        public InputActionMap Get() { return m_Wrapper.m_GUI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GUIActions set) { return set.Get(); }
        public void SetCallbacks(IGUIActions instance)
        {
            if (m_Wrapper.m_GUIActionsCallbackInterface != null)
            {
                @Inventory.started -= m_Wrapper.m_GUIActionsCallbackInterface.OnInventory;
                @Inventory.performed -= m_Wrapper.m_GUIActionsCallbackInterface.OnInventory;
                @Inventory.canceled -= m_Wrapper.m_GUIActionsCallbackInterface.OnInventory;
                @Exit.started -= m_Wrapper.m_GUIActionsCallbackInterface.OnExit;
                @Exit.performed -= m_Wrapper.m_GUIActionsCallbackInterface.OnExit;
                @Exit.canceled -= m_Wrapper.m_GUIActionsCallbackInterface.OnExit;
                @MainAssist.started -= m_Wrapper.m_GUIActionsCallbackInterface.OnMainAssist;
                @MainAssist.performed -= m_Wrapper.m_GUIActionsCallbackInterface.OnMainAssist;
                @MainAssist.canceled -= m_Wrapper.m_GUIActionsCallbackInterface.OnMainAssist;
                @SecondAssist.started -= m_Wrapper.m_GUIActionsCallbackInterface.OnSecondAssist;
                @SecondAssist.performed -= m_Wrapper.m_GUIActionsCallbackInterface.OnSecondAssist;
                @SecondAssist.canceled -= m_Wrapper.m_GUIActionsCallbackInterface.OnSecondAssist;
                @Contect.started -= m_Wrapper.m_GUIActionsCallbackInterface.OnContect;
                @Contect.performed -= m_Wrapper.m_GUIActionsCallbackInterface.OnContect;
                @Contect.canceled -= m_Wrapper.m_GUIActionsCallbackInterface.OnContect;
                @ThirdAssist.started -= m_Wrapper.m_GUIActionsCallbackInterface.OnThirdAssist;
                @ThirdAssist.performed -= m_Wrapper.m_GUIActionsCallbackInterface.OnThirdAssist;
                @ThirdAssist.canceled -= m_Wrapper.m_GUIActionsCallbackInterface.OnThirdAssist;
                @CursorLeft.started -= m_Wrapper.m_GUIActionsCallbackInterface.OnCursorLeft;
                @CursorLeft.performed -= m_Wrapper.m_GUIActionsCallbackInterface.OnCursorLeft;
                @CursorLeft.canceled -= m_Wrapper.m_GUIActionsCallbackInterface.OnCursorLeft;
                @CursorRight.started -= m_Wrapper.m_GUIActionsCallbackInterface.OnCursorRight;
                @CursorRight.performed -= m_Wrapper.m_GUIActionsCallbackInterface.OnCursorRight;
                @CursorRight.canceled -= m_Wrapper.m_GUIActionsCallbackInterface.OnCursorRight;
                @FreeCursor.started -= m_Wrapper.m_GUIActionsCallbackInterface.OnFreeCursor;
                @FreeCursor.performed -= m_Wrapper.m_GUIActionsCallbackInterface.OnFreeCursor;
                @FreeCursor.canceled -= m_Wrapper.m_GUIActionsCallbackInterface.OnFreeCursor;
                @LeftCursorWithAssit.started -= m_Wrapper.m_GUIActionsCallbackInterface.OnLeftCursorWithAssit;
                @LeftCursorWithAssit.performed -= m_Wrapper.m_GUIActionsCallbackInterface.OnLeftCursorWithAssit;
                @LeftCursorWithAssit.canceled -= m_Wrapper.m_GUIActionsCallbackInterface.OnLeftCursorWithAssit;
            }
            m_Wrapper.m_GUIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Inventory.started += instance.OnInventory;
                @Inventory.performed += instance.OnInventory;
                @Inventory.canceled += instance.OnInventory;
                @Exit.started += instance.OnExit;
                @Exit.performed += instance.OnExit;
                @Exit.canceled += instance.OnExit;
                @MainAssist.started += instance.OnMainAssist;
                @MainAssist.performed += instance.OnMainAssist;
                @MainAssist.canceled += instance.OnMainAssist;
                @SecondAssist.started += instance.OnSecondAssist;
                @SecondAssist.performed += instance.OnSecondAssist;
                @SecondAssist.canceled += instance.OnSecondAssist;
                @Contect.started += instance.OnContect;
                @Contect.performed += instance.OnContect;
                @Contect.canceled += instance.OnContect;
                @ThirdAssist.started += instance.OnThirdAssist;
                @ThirdAssist.performed += instance.OnThirdAssist;
                @ThirdAssist.canceled += instance.OnThirdAssist;
                @CursorLeft.started += instance.OnCursorLeft;
                @CursorLeft.performed += instance.OnCursorLeft;
                @CursorLeft.canceled += instance.OnCursorLeft;
                @CursorRight.started += instance.OnCursorRight;
                @CursorRight.performed += instance.OnCursorRight;
                @CursorRight.canceled += instance.OnCursorRight;
                @FreeCursor.started += instance.OnFreeCursor;
                @FreeCursor.performed += instance.OnFreeCursor;
                @FreeCursor.canceled += instance.OnFreeCursor;
                @LeftCursorWithAssit.started += instance.OnLeftCursorWithAssit;
                @LeftCursorWithAssit.performed += instance.OnLeftCursorWithAssit;
                @LeftCursorWithAssit.canceled += instance.OnLeftCursorWithAssit;
            }
        }
    }
    public GUIActions @GUI => new GUIActions(this);

    // Debug
    private readonly InputActionMap m_Debug;
    private IDebugActions m_DebugActionsCallbackInterface;
    private readonly InputAction m_Debug_Debug;
    private readonly InputAction m_Debug_Reset;
    public struct DebugActions
    {
        private @mPlayerInput m_Wrapper;
        public DebugActions(@mPlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Debug => m_Wrapper.m_Debug_Debug;
        public InputAction @Reset => m_Wrapper.m_Debug_Reset;
        public InputActionMap Get() { return m_Wrapper.m_Debug; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DebugActions set) { return set.Get(); }
        public void SetCallbacks(IDebugActions instance)
        {
            if (m_Wrapper.m_DebugActionsCallbackInterface != null)
            {
                @Debug.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnDebug;
                @Debug.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnDebug;
                @Debug.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnDebug;
                @Reset.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnReset;
                @Reset.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnReset;
                @Reset.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnReset;
            }
            m_Wrapper.m_DebugActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Debug.started += instance.OnDebug;
                @Debug.performed += instance.OnDebug;
                @Debug.canceled += instance.OnDebug;
                @Reset.started += instance.OnReset;
                @Reset.performed += instance.OnReset;
                @Reset.canceled += instance.OnReset;
            }
        }
    }
    public DebugActions @Debug => new DebugActions(this);

    // Agent
    private readonly InputActionMap m_Agent;
    private IAgentActions m_AgentActionsCallbackInterface;
    private readonly InputAction m_Agent_Interact;
    private readonly InputAction m_Agent_ConfirmInteract;
    private readonly InputAction m_Agent_Release;
    public struct AgentActions
    {
        private @mPlayerInput m_Wrapper;
        public AgentActions(@mPlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Interact => m_Wrapper.m_Agent_Interact;
        public InputAction @ConfirmInteract => m_Wrapper.m_Agent_ConfirmInteract;
        public InputAction @Release => m_Wrapper.m_Agent_Release;
        public InputActionMap Get() { return m_Wrapper.m_Agent; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AgentActions set) { return set.Get(); }
        public void SetCallbacks(IAgentActions instance)
        {
            if (m_Wrapper.m_AgentActionsCallbackInterface != null)
            {
                @Interact.started -= m_Wrapper.m_AgentActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_AgentActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_AgentActionsCallbackInterface.OnInteract;
                @ConfirmInteract.started -= m_Wrapper.m_AgentActionsCallbackInterface.OnConfirmInteract;
                @ConfirmInteract.performed -= m_Wrapper.m_AgentActionsCallbackInterface.OnConfirmInteract;
                @ConfirmInteract.canceled -= m_Wrapper.m_AgentActionsCallbackInterface.OnConfirmInteract;
                @Release.started -= m_Wrapper.m_AgentActionsCallbackInterface.OnRelease;
                @Release.performed -= m_Wrapper.m_AgentActionsCallbackInterface.OnRelease;
                @Release.canceled -= m_Wrapper.m_AgentActionsCallbackInterface.OnRelease;
            }
            m_Wrapper.m_AgentActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @ConfirmInteract.started += instance.OnConfirmInteract;
                @ConfirmInteract.performed += instance.OnConfirmInteract;
                @ConfirmInteract.canceled += instance.OnConfirmInteract;
                @Release.started += instance.OnRelease;
                @Release.performed += instance.OnRelease;
                @Release.canceled += instance.OnRelease;
            }
        }
    }
    public AgentActions @Agent => new AgentActions(this);

    // Firearms
    private readonly InputActionMap m_Firearms;
    private IFirearmsActions m_FirearmsActionsCallbackInterface;
    private readonly InputAction m_Firearms_Trigger;
    private readonly InputAction m_Firearms_Aim;
    private readonly InputAction m_Firearms_Room;
    private readonly InputAction m_Firearms_Reload;
    private readonly InputAction m_Firearms_SwitchMode;
    private readonly InputAction m_Firearms_Anex;
    public struct FirearmsActions
    {
        private @mPlayerInput m_Wrapper;
        public FirearmsActions(@mPlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Trigger => m_Wrapper.m_Firearms_Trigger;
        public InputAction @Aim => m_Wrapper.m_Firearms_Aim;
        public InputAction @Room => m_Wrapper.m_Firearms_Room;
        public InputAction @Reload => m_Wrapper.m_Firearms_Reload;
        public InputAction @SwitchMode => m_Wrapper.m_Firearms_SwitchMode;
        public InputAction @Anex => m_Wrapper.m_Firearms_Anex;
        public InputActionMap Get() { return m_Wrapper.m_Firearms; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FirearmsActions set) { return set.Get(); }
        public void SetCallbacks(IFirearmsActions instance)
        {
            if (m_Wrapper.m_FirearmsActionsCallbackInterface != null)
            {
                @Trigger.started -= m_Wrapper.m_FirearmsActionsCallbackInterface.OnTrigger;
                @Trigger.performed -= m_Wrapper.m_FirearmsActionsCallbackInterface.OnTrigger;
                @Trigger.canceled -= m_Wrapper.m_FirearmsActionsCallbackInterface.OnTrigger;
                @Aim.started -= m_Wrapper.m_FirearmsActionsCallbackInterface.OnAim;
                @Aim.performed -= m_Wrapper.m_FirearmsActionsCallbackInterface.OnAim;
                @Aim.canceled -= m_Wrapper.m_FirearmsActionsCallbackInterface.OnAim;
                @Room.started -= m_Wrapper.m_FirearmsActionsCallbackInterface.OnRoom;
                @Room.performed -= m_Wrapper.m_FirearmsActionsCallbackInterface.OnRoom;
                @Room.canceled -= m_Wrapper.m_FirearmsActionsCallbackInterface.OnRoom;
                @Reload.started -= m_Wrapper.m_FirearmsActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_FirearmsActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_FirearmsActionsCallbackInterface.OnReload;
                @SwitchMode.started -= m_Wrapper.m_FirearmsActionsCallbackInterface.OnSwitchMode;
                @SwitchMode.performed -= m_Wrapper.m_FirearmsActionsCallbackInterface.OnSwitchMode;
                @SwitchMode.canceled -= m_Wrapper.m_FirearmsActionsCallbackInterface.OnSwitchMode;
                @Anex.started -= m_Wrapper.m_FirearmsActionsCallbackInterface.OnAnex;
                @Anex.performed -= m_Wrapper.m_FirearmsActionsCallbackInterface.OnAnex;
                @Anex.canceled -= m_Wrapper.m_FirearmsActionsCallbackInterface.OnAnex;
            }
            m_Wrapper.m_FirearmsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Trigger.started += instance.OnTrigger;
                @Trigger.performed += instance.OnTrigger;
                @Trigger.canceled += instance.OnTrigger;
                @Aim.started += instance.OnAim;
                @Aim.performed += instance.OnAim;
                @Aim.canceled += instance.OnAim;
                @Room.started += instance.OnRoom;
                @Room.performed += instance.OnRoom;
                @Room.canceled += instance.OnRoom;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @SwitchMode.started += instance.OnSwitchMode;
                @SwitchMode.performed += instance.OnSwitchMode;
                @SwitchMode.canceled += instance.OnSwitchMode;
                @Anex.started += instance.OnAnex;
                @Anex.performed += instance.OnAnex;
                @Anex.canceled += instance.OnAnex;
            }
        }
    }
    public FirearmsActions @Firearms => new FirearmsActions(this);
    private int m_PCSchemeIndex = -1;
    public InputControlScheme PCScheme
    {
        get
        {
            if (m_PCSchemeIndex == -1) m_PCSchemeIndex = asset.FindControlSchemeIndex("PC");
            return asset.controlSchemes[m_PCSchemeIndex];
        }
    }
    public interface ICamerasActions
    {
        void OnFirstPersonCamera(InputAction.CallbackContext context);
        void OnThirdPersonCamera(InputAction.CallbackContext context);
    }
    public interface IFreeCamActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnViewPort(InputAction.CallbackContext context);
        void OnTest(InputAction.CallbackContext context);
        void OnRoom(InputAction.CallbackContext context);
        void OnSpeedUp(InputAction.CallbackContext context);
    }
    public interface IHumanoidActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnMouseRotate(InputAction.CallbackContext context);
        void OnRush(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMainInteract(InputAction.CallbackContext context);
        void OnDequip(InputAction.CallbackContext context);
        void OnDiscard(InputAction.CallbackContext context);
        void OnRoom(InputAction.CallbackContext context);
        void OnSquat(InputAction.CallbackContext context);
    }
    public interface IBattleActions
    {
        void OnMainUse(InputAction.CallbackContext context);
        void OnAssist(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnSwitch(InputAction.CallbackContext context);
        void OnSwitchMode(InputAction.CallbackContext context);
        void OnChargingBolt(InputAction.CallbackContext context);
        void OnRoom(InputAction.CallbackContext context);
        void OnSwitchAssist(InputAction.CallbackContext context);
    }
    public interface IVehicleActions
    {
        void OnBrake(InputAction.CallbackContext context);
        void OnRush(InputAction.CallbackContext context);
        void OnUseEngine(InputAction.CallbackContext context);
        void OnSteer(InputAction.CallbackContext context);
        void OnTorque(InputAction.CallbackContext context);
    }
    public interface IGUIActions
    {
        void OnInventory(InputAction.CallbackContext context);
        void OnExit(InputAction.CallbackContext context);
        void OnMainAssist(InputAction.CallbackContext context);
        void OnSecondAssist(InputAction.CallbackContext context);
        void OnContect(InputAction.CallbackContext context);
        void OnThirdAssist(InputAction.CallbackContext context);
        void OnCursorLeft(InputAction.CallbackContext context);
        void OnCursorRight(InputAction.CallbackContext context);
        void OnFreeCursor(InputAction.CallbackContext context);
        void OnLeftCursorWithAssit(InputAction.CallbackContext context);
    }
    public interface IDebugActions
    {
        void OnDebug(InputAction.CallbackContext context);
        void OnReset(InputAction.CallbackContext context);
    }
    public interface IAgentActions
    {
        void OnInteract(InputAction.CallbackContext context);
        void OnConfirmInteract(InputAction.CallbackContext context);
        void OnRelease(InputAction.CallbackContext context);
    }
    public interface IFirearmsActions
    {
        void OnTrigger(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnRoom(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnSwitchMode(InputAction.CallbackContext context);
        void OnAnex(InputAction.CallbackContext context);
    }
}
